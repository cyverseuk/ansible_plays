---
- name: remove old docker installation
  apt: name={{ item }} state=absent
  with_items:
  - docker
  - docker-engine
  - docker.io
  - containerd
  - runc
- block:
  - name: get uname -r
    command: "uname -r"
    register: command_output
    check_mode: no
  - debug:
      var: command_output.stdout
  - name: install additional packages for docker on trusty
    apt: name={{ item }} state=present update_cache=yes
    with_items:
    - linux-image-extra-{{ command_output.stdout }}
    - linux-image-extra-virtual
    when: command_output.stdout >= '4.0'
  when: ansible_distribution_version == '14.04'
- name: install pkgs to allow apt to use https
  apt: name={{ item }} state=present update_cache=yes
  with_items:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
- name: add docker GPG key
  apt_key:
    state: present
    url: https://download.docker.com/linux/ubuntu/gpg
- name: save distribution
  command: "lsb_release -cs"
  register: command_output
  check_mode: no
- debug:
    var: command_output.stdout
- name: add docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ command_output.stdout }} stable
    state: present
- name: install docker on workers
  #apt: name=docker-ce-17.06.0~ce-0~ubuntu state=present update_cache=yes
  apt: name={{ item }} state=present update_cache=yes
  with_items:
  - docker-ce
  - docker-ce-cli
  - containerd.io
  when: not ansible_check_mode #this is needed as in check mode the repo is not there
